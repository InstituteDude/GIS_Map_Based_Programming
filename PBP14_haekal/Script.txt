    <!-- To load GEOTIFF by Plugin -->
    <script src="src/georaster.browser.bundle.min.js"></script>
    <script src="src/chroma.js"></script>
    <script src="src/georaster-layer-for-leaflet.min.js"></script>
---------------------------------------------------------------------------------------------------------

  <!-- Load Geotiff Ketinggian -->
  var tinggi = L.layerGroup();

  var url_to_geotiff_file = "Dem_KtBDG32Bit2.tif";

  fetch(url_to_geotiff_file)
    .then(response => response.arrayBuffer())
    .then(arrayBuffer => {
      parseGeoraster(arrayBuffer).then(georaster => {
        const min = georaster.mins[0];
        const max = georaster.maxs[0];
        const range = georaster.ranges[0];

        // available color scales can be found by running console.log(chroma.brewer);
        console.log(chroma.brewer);
        var scale = chroma.scale("Viridis");
        // "Spectral" = Merah ke Kuning Ke Biru,
        // "RdYlGn" = Merah Ke Kuning ke Hijau
        // "RdYlBu" = Merah Ke Kuning ke Biru
        // "Viridis" = Biru Laut ke hijau ke Kuning
        // "BrBg", "RdGy", "PuOr", "RdPu", "YlGnBu", "YlOrRd", "YlOrBr"

        var layer = new GeoRasterLayer({
            georaster: georaster,
            opacity: 1.0,
            pixelValuesToColorFn: function(pixelValues) {
              var pixelValue = pixelValues[0]; // there's just one band in this raster

              // if there's zero wind, don't return a color
              if (pixelValue === 0) return null;

              // scale to 0 - 1 used by chroma
              var scaledPixelValue = (pixelValue - min) / range;

              var color = scale(scaledPixelValue).hex();

              return color;
            },
            resolution: 256
        })
        console.log("layer:", layer);
        layer.addTo(tinggi);

        map.fitBounds(layer.getBounds());
      });
    });	